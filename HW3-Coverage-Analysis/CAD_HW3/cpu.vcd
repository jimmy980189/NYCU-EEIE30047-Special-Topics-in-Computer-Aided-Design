$date
	Wed Dec  7 20:44:53 2022
$end

$version
	Synopsys VCS version O-2018.09_Full64
$end

$timescale
	1s
$end

$comment Csum: 1 d3ba49bd76ff07e0 $end


$scope module test $end
$var reg 8 ! in [7:0] $end
$var reg 1 " clk $end
$var reg 1 # reset $end
$var wire 8 $ out [7:0] $end

$scope module cc $end
$var wire 8 ! in [7:0] $end
$var wire 1 " clk $end
$var wire 1 # reset $end
$var reg 8 $ out [7:0] $end
$var reg 8 % reg_a [7:0] $end
$var reg 8 & reg_b [7:0] $end
$var reg 8 ' reg_c [7:0] $end
$var reg 8 ( instr [7:0] $end
$var reg 8 ) write_data [7:0] $end
$var wire 8 * mem_out [7:0] $end
$var wire 8 + alu_out [7:0] $end
$var wire 4 , addr [3:0] $end
$var wire 2 - sel [1:0] $end
$var wire 1 . ready $end
$var wire 1 / w_out $end
$var wire 1 0 w_reg_a $end
$var wire 1 1 w_reg_b $end
$var wire 1 2 w_reg_c $end
$var wire 1 3 w_mem $end

$scope module r1 $end
$var wire 4 , address [3:0] $end
$var wire 8 ) data_in [7:0] $end
$var wire 1 3 w_mem $end
$var wire 1 " clk $end
$var reg 8 * data_out [7:0] $end
$upscope $end


$scope module a1 $end
$var wire 8 % reg_a [7:0] $end
$var wire 8 & reg_b [7:0] $end
$var wire 3 4 sel_fun [2:0] $end
$var reg 8 + alu_out [7:0] $end
$upscope $end


$scope module c1 $end
$var wire 8 ( opcode [7:0] $end
$var wire 1 " clk $end
$var wire 1 # reset $end
$var reg 4 , addr [3:0] $end
$var reg 2 - sel [1:0] $end
$var reg 1 . ready $end
$var reg 1 / w_out $end
$var reg 1 0 w_reg_a $end
$var reg 1 1 w_reg_b $end
$var reg 1 2 w_reg_c $end
$var reg 1 3 w_mem $end
$var reg 2 5 current_state [1:0] $end
$var reg 2 6 next_state [1:0] $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
x.
x3
x/
x0
x1
x2
0"
1#
bxxxxxxxx +
bxxxx ,
bxx -
bxx 5
bxxxxxxxx *
b00000000 !
bxxxxxxxx (
bxx 6
bxxxxxxxx $
bxxxxxxxx %
bxxxxxxxx &
bxxxxxxxx '
bxxx 4
bxxxxxxxx )
$end
#5
1"
b00000000 (
b000 4
b00000000 %
b00000000 &
b00000000 '
b00000000 $
bzzzzzzzz *
b01 5
0.
b0000 ,
0/
00
01
02
03
b00 -
b00 6
b00000000 +
b00000000 )
#10
0"
#15
1"
bxxxxxxxx *
#20
b01100111 !
0#
0"
b01100111 )
#25
1"
b01100111 (
b110 4
b00 5
1.
b0111 ,
10
b01 6
bxxxxxxxx +
#30
0"
#35
1"
b01100111 %
b01 5
0.
b0000 ,
00
b00 6
#40
b01101000 !
0"
b01101000 )
#45
1"
b01101000 (
b00 5
1.
b1000 ,
10
b01 6
#50
0"
#55
1"
b01101000 %
b01 5
0.
b0000 ,
00
b00 6
#60
b01110001 !
0"
b01110001 )
#65
1"
b01110001 (
b111 4
b00 5
1.
b0001 ,
11
b01 6
#70
0"
#75
1"
b01110001 &
b01 5
0.
b0000 ,
01
b00 6
#80
b01111110 !
0"
b01111110 )
#85
1"
b01111110 (
b00 5
1.
b1110 ,
11
b01 6
#90
0"
#95
1"
b01111110 &
b01 5
0.
b0000 ,
01
b00 6
#100
b00000000 !
0"
b00000000 )
#105
1"
b00000000 (
b000 4
b00 5
1.
12
b10 -
b11100110 +
b11100110 )
#110
0"
#115
1"
b11100110 '
#120
b00010000 !
0"
#125
1"
b00010000 (
b001 4
b11101010 +
b11101010 )
#130
0"
#135
1"
b11101010 '
#140
b00100000 !
0"
#145
1"
b00100000 (
b010 4
b01101001 +
b01101001 )
#150
0"
#155
1"
b01101001 '
#160
b00110000 !
0"
#165
1"
b00110000 (
b011 4
b01100111 +
b01100111 )
#170
0"
#175
1"
b01100111 '
#180
b01000000 !
0"
#185
1"
b01000000 (
b100 4
b11100111 +
b11100111 )
#190
0"
#195
1"
b11100111 '
#200
b11100000 !
0"
#205
1"
b11100000 (
b110 4
11
02
b01 -
bxxxxxxxx +
#210
0"
#215
1"
b11100111 &
#220
b01011111 !
0"
#225
1"
b01011111 (
b101 4
b1111 ,
01
12
b10 -
b10011000 +
b10011000 )
#230
0"
#235
1"
b10011000 '
#240
b10011111 !
0"
#245
1"
b10011111 (
b001 4
02
13
b01 -
b10000001 +
#250
0"
#255
1"
b10011000 $
#260
b10101111 !
0"
#265
1"
b10101111 (
b010 4
03
b11 -
b10 6
b01101001 +
bxxxxxxxx )
#270
0"
#275
1"
bxxxxxxxx $
b10011000 *
b10 5
b10011000 )
0.
b0000 ,
12
b00 6
#280
b00110000 !
0"
#285
1"
b00110000 (
b011 4
bxxxxxxxx *
b00 5
1.
b10 -
b01100111 +
b01100111 )
#290
0"
#295
1"
b01100111 '
#300
b10011111 !
0"
#305
1"
b10011111 (
b001 4
b1111 ,
02
13
b01 -
b10000001 +
#310
0"
#315
1"
b01100111 $
#320
b10101111 !
0"
#325
1"
b10101111 (
b010 4
03
b11 -
b10 6
b01101001 +
bxxxxxxxx )
#330
0"
#335
1"
bxxxxxxxx $
b01100111 *
b10 5
b01100111 )
0.
b0000 ,
12
b00 6
#340
b01011111 !
0"
#345
1"
b01011111 (
b101 4
bxxxxxxxx *
b00 5
1.
b1111 ,
b10 -
b10011000 +
b10011000 )
#350
0"
#355
1"
b10011000 '
b01100111 *
#360
b10011111 !
0"
#365
1"
b10011111 (
b001 4
02
13
b01 -
b10000001 +
#370
0"
#375
1"
b10011000 $
#380
b10101111 !
0"
#385
1"
b10101111 (
b010 4
03
b11 -
b10 6
b01101001 +
b01100111 )
#390
0"
#395
1"
b01100111 $
b10011000 *
b10 5
b10011000 )
0.
b0000 ,
12
b00 6
#400
b00000000 !
1#
0"
#405
1"
b00000000 (
b000 4
b00000000 %
b00000000 &
b00000000 '
b00000000 $
bxxxxxxxx *
b01 5
02
b00 -
b00000000 +
b00000000 )
#410
0"
#415
1"
#420
b00110000 !
0#
0"
b00110000 )
#425
1"
b00110000 (
b011 4
b00 5
1.
12
b10 -
b11111111 +
b11111111 )
#430
0"
#435
1"
b11111111 '
#440
b11010000 !
0"
#445
1"
b11010000 (
b101 4
10
02
b01 -
b00000000 +
#450
0"
#455
1"
b11111111 %
b00000001 +
#460
b01011111 !
0"
#465
1"
b01011111 (
b1111 ,
00
12
b10 -
b00000001 )
#470
0"
#475
1"
b00000001 '
b10011000 *
#480
b11010000 !
0"
#485
1"
b11010000 (
b0000 ,
10
02
b01 -
#490
0"
#495
1"
b00000001 %
bxxxxxxxx *
b11111111 +
#500
b10001111 !
0"
#505
1"
b10001111 (
b000 4
b1111 ,
00
13
b00 -
b01 6
b00000001 +
b10001111 )
#510
0"
#515
1"
b10001111 $
b01 5
0.
b0000 ,
03
b00 6
#520
b10111111 !
0"
b10111111 )
#525
1"
b10111111 (
b011 4
b00 5
1.
b1111 ,
1/
b01 -
b00000000 +
b00000001 )
#530
0"
#535
1"
b00000001 $
b10001111 *
#540
b11001111 !
0"
#545
1"
b11001111 (
b100 4
b11 -
b11 6
b00000010 +
b10001111 )
#550
0"
#555
1"
b10001111 $
b11 5
0.
b0000 ,
b00 6
#560
b00000000 !
0"
#565
1"
b00000000 (
b000 4
bxxxxxxxx *
b00 5
1.
0/
12
b10 -
b00000001 +
b00000001 )
#570
0"
#575
1"
#580
b11001111 !
0"
#585
1"
b11001111 (
b100 4
b1111 ,
1/
02
b11 -
b11 6
b00000010 +
bxxxxxxxx )
#590
0"
#595
1"
bxxxxxxxx $
b10001111 *
b11 5
b10001111 )
0.
b0000 ,
b00 6
#600
b00000000 !
1#
0"
#605
1"
b00000000 (
b000 4
b00000000 %
b00000000 '
b00000000 $
bxxxxxxxx *
b01 5
0/
b00 -
b00000000 +
b00000000 )
#610
0"
#615
1"
#620
b11111111 !
0#
0"
b11111111 )
#625
1"
b11111111 (
b111 4
b00 5
1.
b1111 ,
13
b10 -
bxxxxxxxx +
bxxxxxxxx )
